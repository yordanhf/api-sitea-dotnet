// <auto-generated />
using System;
using ApiSitea.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiSitea.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251018235202_Paciente1")]
    partial class Paciente1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("ApiSitea.Domain.Entities.AntecedentePPP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AntecedentesPPP");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.CClinica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CClinicas");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Centro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Centros");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Comorbilidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Comorbilidades");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Diagnostico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Diagnosticos");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Fortaleza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Fortalezas");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Medicamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Paciente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AntecedentesPF")
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CentroId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("DescripcionTerapia")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DiagnosticoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EdadDiagnostico")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("FechaDiagnostico")
                        .HasColumnType("TEXT");

                    b.Property<string>("MotivoConsulta")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Terapia")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Verbal")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("VinculoInstitucionalId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Apellidos");

                    b.HasIndex("CentroId");

                    b.HasIndex("Ci")
                        .IsUnique();

                    b.HasIndex("DiagnosticoId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("Nombre");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("VinculoInstitucionalId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.TipoExamen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TiposExamen");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.TipoInterconsulta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TiposInterconsulta");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.VinculoInstitucional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VinculosInstitucionales");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Municipio", b =>
                {
                    b.HasOne("ApiSitea.Domain.Entities.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Paciente", b =>
                {
                    b.HasOne("ApiSitea.Domain.Entities.Centro", "Centro")
                        .WithMany("Pacientes")
                        .HasForeignKey("CentroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiSitea.Domain.Entities.Diagnostico", "Diagnostico")
                        .WithMany("Pacientes")
                        .HasForeignKey("DiagnosticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiSitea.Domain.Entities.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiSitea.Domain.Entities.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiSitea.Domain.Entities.VinculoInstitucional", "VinculoInstitucional")
                        .WithMany("Pacientes")
                        .HasForeignKey("VinculoInstitucionalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Centro");

                    b.Navigation("Diagnostico");

                    b.Navigation("Municipio");

                    b.Navigation("Provincia");

                    b.Navigation("VinculoInstitucional");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Centro", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.Diagnostico", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("ApiSitea.Domain.Entities.VinculoInstitucional", b =>
                {
                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
